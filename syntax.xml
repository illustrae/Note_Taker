List:
List<String> names = ["Trae", "Gray", "Sam"]

Maps:
Maps are objects
Map user = {
    'key': "Value"
}

Loops:
for ( initialization; condition; iteration)

Everything in fluter is a Widget

Always return a MaterialApp(
    home: Scaffold(),
)

Fundamental Widgets

Main widget names
appBar: AppBar(title, backgroundColor, elevation if set to 0 makes it flat
leading: Icon will do the front icon Icons.menu - left hand side
actions: IconButton right hand side.)

body: Column, Row ( requires children: [ Container() sit inside children.])

MainAxisAlignment .end .center .space-evenly .space-between
CrossAxisAlignment .start (left) .center .end(right)


Expanded widget 
can wrap around containers and will set the containers evenly 
Flex property 1,2,3 changes the ratios.

body: ListView a widget that will allow scrolling so all properties fit
ListView.builder(
    itemCount:10,
    itemBuilder: (context, index) => ListTitle(
        title: Text(names[index[]),
    )
)
You also have GridView.Builder(
    itemCount
)

body: Stack(
    Alignment.bottomRight .center 
)

GestureDetector can wrap other widgets, onTap is popular

Navigator
routes: {
    '/firstpage': (context) => FirstPage(),
    '/secondpage': (context) => SecondPage(),
}

drawer: Drawer(),
It has a DrawerHeader that contains a child.
ListTile
